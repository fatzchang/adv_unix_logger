# check arguments is not empty
if [ -z "$1" ]
then
    echo "no command given."
    exit 1
fi

# error function
print_err() 
{
    printf "$0: invalid option -- '$OPTARG'\n"

    printf "usage: $0 [-o file] [-p sopath] [--] cmd [cmd args ...]\n"
    printf "\t-p: set the path to logger.so, default = ./logger.so\n"
    printf "\t-o: print output to file, print to \"stderr\" if no file specified\n"
    printf "\t--: separate the arguments for logger and for the command\n"
}

# default value
output_file=/proc/$$/fd/2
so_path="./logger.so"

# start parsing
# leading : means no error will print
while getopts ":o:p:" arg
do
    case $arg in
        o)
            output_file="$OPTARG"
            ;;
        p)
            so_path="$OPTARG"
            ;;
        : | ?) 
            # should sparate these two case, and generate different erro messages
            print_err
            exit 1
            ;;
    esac
done

# shift parsed arguments
shift $(($OPTIND - 1))

export LD_PRELOAD="$so_path"
export OUTPUT_FILE="$output_file"

# execute command with so injection
$@